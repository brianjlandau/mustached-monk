h1. Rack::Session, Rack::Cache and cache Redis stores for Ruby web frameworks

h2. Installation

Download and install Redis from "http://code.google.com/p/redis/":http://code.google.com/p/redis/

  curl -OL "http://redis.googlecode.com/files/redis-0.900_2.tar.gz":http://redis.googlecode.com/files/redis-0.900_2.tar.gz
  tar -zxvf redis-0.900_2.tar.gz
  mv redis-0.900_2 redis
  cd redis
  make

Install the gems

  -sudo gem install ezmobius-redis-rb -s http://gems.github.com-
  
  git clone git://github.com/ezmobius/redis-rb.git
  cd redis-rb
  sudo rake install

  sudo gem install jodosha-redis-store -s http://gems.github.com

h2. Cache store

Provides a cache store for your Ruby web framework of choice.

h3. How to use with Rails

  config.gem "jodosha-redis-store", :source => "http://gems.github.com", :lib => "redis-store"
  require "redis-store"
  config.cache_store = :redis_store

h3. How to use with Merb

  dependency "jodosha-redis-store", "0.3.6"
  dependency("merb-cache", merb_gems_version) do
    Merb::Cache.setup do
      register(:redis, Merb::Cache::RedisStore, :servers => ["127.0.0.1:6379"])
    end
  end

h3. How to use with Sinatra

  require 'rubygems'
  require 'sinatra'
  require 'jodosha-redis-store'
  class MyApp < Sinatra::Base
    register Sinatra::Cache
    get '/hi' do
      cache.fetch("greet") { "Hello, World!" }
    end
  end

h2. Rack::Session

Provides a Redis store for Rack::Session. See "http://rack.rubyforge.org/doc/Rack/Session.html":http://rack.rubyforge.org/doc/Rack/Session.html

h3. How to use with a generic Rack application

  require "rubygems"
  require "rack"
  require "jodosha-redis-store"
  require "application"
  use Rack::Session::Redis
  run Application.new

h3. How to use with Rails

  config.gem "jodosha-redis-store", :source => "http://gems.github.com", :lib => "redis-store"
  ActionController::Base.session_store = Rack::Session::Redis

h3. How to use with Merb

  dependency "jodosha-redis-store", "0.3.6"
  Merb::Config.use do |c|
    c[:session_store] = 'redis'
  end
  Merb::BootLoader.before_app_loads do
    Merb::SessionContainer.subclasses << "Merb::RedisSession"
  end

h3. How to use with Sinatra

Sorry, but Sinatra application boot system "hardcode":http://github.com/sinatra/sinatra/blob/0f02bafe86f8dd9bba9ab425468cb1067caa83ff/lib/sinatra/base.rb#L785 Rack::Session::Cookie

h2. Rack::Cache

Provides a Redis store for HTTP caching. See "http://github.com/rtomayko/rack-cache":http://github.com/rtomayko/rack-cache

  require "rubygems"
  require "rack"
  require "rack/cache"
  require "jodosha-redis-store"
  require "application"
  use Rack::Cache,
    :metastore   => 'redis://localhost:6379/0',
    :entitystore => 'redis://localhost:6380/1'
  run Application.new

h2. Copyright

(c) 2009 Luca Guidi - "http://lucaguidi.com":http://lucaguidi.com, released under the MIT license
